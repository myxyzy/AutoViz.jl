var documenterSearchIndex = {"docs":
[{"location":"api/#API-1","page":"API","title":"API","text":"","category":"section"},{"location":"api/#","page":"API","title":"API","text":"List of functions and datastructure available in AutoViz","category":"page"},{"location":"api/#","page":"API","title":"API","text":"Modules = [AutoViz]","category":"page"},{"location":"api/#AutoViz.ArrowCar","page":"API","title":"AutoViz.ArrowCar","text":"ArrowCar{A<:AbstractArray{Float64}, C<:Colorant} <: Renderable\nArrowCar(pos::AbstractArray, angle::Float64=0.0; length = 4.8, width = 1.8,  color=_colortheme[\"COLOR_CAR_OTHER\"], text=\"\", id=0)\nArrowCar(x::Real, y::Real, angle::Float64=0.0; length = 4.8, width = 1.8,  color=_colortheme[\"COLOR_CAR_OTHER\"], text=\"\", id=0)\n\nA renderable type to represent a rectangular car with an arrow in the middle. \n\n\n\n\n\n","category":"type"},{"location":"api/#AutoViz.BlinkerOverlay","page":"API","title":"AutoViz.BlinkerOverlay","text":"BlinkerOverlay\n\nDisplays a circle on one of the top corner of a vehicle to symbolize a blinker.  fields: \n\non: turn the blinker on\nright: blinker on the top right corner, if false, blinker on the left \nveh: the vehicle for which to display the blinker \ncolor: the color of the blinker\nsize: the size of the blinker \n\n\n\n\n\n","category":"type"},{"location":"api/#AutoViz.HistogramOverlay","page":"API","title":"AutoViz.HistogramOverlay","text":"HistogramOverlay\n\nDisplay a bar at the specified position pos, the bar is of size width, height and is filled up to a given proportion of its height.  The fill proportion is set using val, it should be a number between 0 and 1. If it is 0, the bar is not filled, if it is 1 it is filled to the top.\n\n\n\n\n\n","category":"type"},{"location":"api/#AutoViz.IDOverlay","page":"API","title":"AutoViz.IDOverlay","text":"IDOverlay\n\nDisplay the ID on top of each entity in a scene.\n\nFiels\n\ncolor::Colorant default white\nfont_size::Int64 default 15\n\n\n\n\n\n","category":"type"},{"location":"api/#AutoViz.SceneFollowCamera","page":"API","title":"AutoViz.SceneFollowCamera","text":"SceneFollowCamera{R<:Real}\n\nCamera centered over all vehicles  The zoom can be adjusted. \n\nFields\n\nzoom::R\n\n\n\n\n\n","category":"type"},{"location":"api/#AutoViz.isrenderable","page":"API","title":"AutoViz.isrenderable","text":"Return true if an object or type is directly renderable, false otherwise.\n\nNew types should implement the isrenderable(t::Type{NewType}) method.\n\n\n\n\n\n","category":"function"},{"location":"api/#AutoViz.render-Tuple{Any}","page":"API","title":"AutoViz.render","text":"render(scene)\nrender(scene; kwargs...)\n\nRender all the items in scene to a Cairo surface and return it.\n\nscene is simply an iterable object (e.g. a vector) of items that are either directly renderable or renderable by conversion. See the AutoViz README for more details.\n\n\n\n\n\n","category":"method"},{"location":"api/#AutoViz.set_color_theme-Tuple{Any}","page":"API","title":"AutoViz.set_color_theme","text":"set_color_theme(colortheme)\n\nChange the color theme of the package\n\n\n\n\n\n","category":"method"},{"location":"api/#AutoViz.write_to_svg-Tuple{CairoSurface,AbstractString}","page":"API","title":"AutoViz.write_to_svg","text":"write_to_svg(surface::CairoSurface, filename::AbstractString)\n\nWrite a cairo svg surface to a file. The surface object is destroyed after.\n\n\n\n\n\n","category":"method"},{"location":"api/#AutoViz.renderfun-Union{Tuple{Entity{S,D,I}}, Tuple{I}, Tuple{D}, Tuple{S}} where I where D where S","page":"API","title":"AutoViz.renderfun","text":"renderfun(veh::Entity{S,D,I}) where {S,D,I}\n\ndecides which rendering function to use based on the class of veh and AutoViz RENDER_MODE\n\n\n\n\n\n","category":"method"},{"location":"#About-1","page":"About","title":"About","text":"","category":"section"},{"location":"#","page":"About","title":"About","text":"This the documentation for AutoViz.jl. For now it is just a list of functions. ","category":"page"},{"location":"#","page":"About","title":"About","text":"","category":"page"}]
}
